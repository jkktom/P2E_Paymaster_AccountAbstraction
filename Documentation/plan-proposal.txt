Refined 3-Entity Proposal System Design                                                                                                                 │
     │                                                                                                                                                         │
     │ 🎯 Your Approach Analysis                                                                                                                               │
     │                                                                                                                                                         │
     │ Excellent design! This follows proper database normalization and separation of concerns:                                                                │
     │                                                                                                                                                         │
     │ 1. Proposal Entity: Mirror smart contract exactly - no extra data                                                                                       │
     │ 2. ProposalVoteCount Entity: Real-time vote aggregation - separate from blockchain data                                                                 │
     │ 3. UserVote Entity: Individual vote records with Google ID indexing                                                                                     │
     │                                                                                                                                                         │
     │ 📊 3-Entity Architecture                                                                                                                                │
     │                                                                                                                                                         │
     │ Entity 1: Proposal (Smart Contract Mirror)                                                                                                              │
     │                                                                                                                                                         │
     │ @Entity                                                                                                                                                 │
     │ @Table(name = "proposals")                                                                                                                              │
     │ public class Proposal {                                                                                                                                 │
     │     @Id                                                                                                                                                 │
     │     @GeneratedValue(strategy = GenerationType.IDENTITY)                                                                                                 │
     │     private Long id;                                                                                                                                    │
     │                                                                                                                                                         │
     │     @Column(name = "blockchain_proposal_id", unique = true, nullable = false)                                                                           │
     │     private Integer blockchainProposalId;  // Smart contract proposal ID                                                                                │
     │                                                                                                                                                         │
     │     @Column(name = "description", columnDefinition = "TEXT", nullable = false)                                                                          │
     │     private String description;                                                                                                                         │
     │                                                                                                                                                         │
     │     @Column(name = "proposer_address", length = 42, nullable = false)                                                                                   │
     │     private String proposerAddress;  // Wallet address from smart contract                                                                              │
     │                                                                                                                                                         │
     │     @Column(name = "deadline", nullable = false)                                                                                                        │
     │     private LocalDateTime deadline;                                                                                                                     │
     │                                                                                                                                                         │
     │     @Column(name = "executed", nullable = false)                                                                                                        │
     │     private Boolean executed = false;                                                                                                                   │
     │                                                                                                                                                         │
     │     @Column(name = "canceled", nullable = false)                                                                                                        │
     │     private Boolean canceled = false;                                                                                                                   │
     │                                                                                                                                                         │
     │     @Column(name = "created_at", nullable = false)                                                                                                      │
     │     private LocalDateTime createdAt;                                                                                                                    │
     │                                                                                                                                                         │
     │     // Additional backend fields                                                                                                                        │
     │     @Column(name = "tx_hash", length = 66)                                                                                                              │
     │     private String txHash;  // Creation transaction hash                                                                                                │
     │                                                                                                                                                         │
     │     @Column(name = "proposer_google_id", length = 50)                                                                                                   │
     │     private String proposerGoogleId;  // Link to our user system                                                                                        │
     │ }                                                                                                                                                       │
     │                                                                                                                                                         │
     │ Entity 2: ProposalVoteCount (Real-time Aggregation)                                                                                                     │
     │                                                                                                                                                         │
     │ @Entity                                                                                                                                                 │
     │ @Table(name = "proposal_vote_counts")                                                                                                                   │
     │ public class ProposalVoteCount {                                                                                                                        │
     │     @Id                                                                                                                                                 │
     │     private Long proposalId;  // Same as Proposal.id                                                                                                    │
     │                                                                                                                                                         │
     │     @OneToOne                                                                                                                                           │
     │     @MapsId                                                                                                                                             │
     │     @JoinColumn(name = "proposal_id")                                                                                                                   │
     │     private Proposal proposal;                                                                                                                          │
     │                                                                                                                                                         │
     │     @Column(name = "for_votes", precision = 20, scale = 0, nullable = false)                                                                            │
     │     private BigInteger forVotes = BigInteger.ZERO;  // Wei format                                                                                       │
     │                                                                                                                                                         │
     │     @Column(name = "against_votes", precision = 20, scale = 0, nullable = false)                                                                        │
     │     private BigInteger againstVotes = BigInteger.ZERO;  // Wei format                                                                                   │
     │                                                                                                                                                         │
     │     @Column(name = "total_voters", nullable = false)                                                                                                    │
     │     private Integer totalVoters = 0;                                                                                                                    │
     │                                                                                                                                                         │
     │     @Column(name = "last_updated", nullable = false)                                                                                                    │
     │     private LocalDateTime lastUpdated;                                                                                                                  │
     │                                                                                                                                                         │
     │     // Computed fields for convenience                                                                                                                  │
     │     public BigInteger getTotalVotes() {                                                                                                                 │
     │         return forVotes.add(againstVotes);                                                                                                              │
     │     }                                                                                                                                                   │
     │                                                                                                                                                         │
     │     public double getForPercentage() {                                                                                                                  │
     │         BigInteger total = getTotalVotes();                                                                                                             │
     │         if (total.equals(BigInteger.ZERO)) return 0.0;                                                                                                  │
     │         return forVotes.multiply(BigInteger.valueOf(100)).divide(total).doubleValue();                                                                  │
     │     }                                                                                                                                                   │
     │ }                                                                                                                                                       │
     │                                                                                                                                                         │
     │ Entity 3: UserVote (Individual Vote Records)                                                                                                            │
     │                                                                                                                                                         │
     │ @Entity                                                                                                                                                 │
     │ @Table(name = "user_votes",                                                                                                                             │
     │        uniqueConstraints = @UniqueConstraint(columnNames = {"proposal_id", "user_google_id"}))                                                          │
     │ public class UserVote {                                                                                                                                 │
     │     @Id                                                                                                                                                 │
     │     @GeneratedValue(strategy = GenerationType.IDENTITY)                                                                                                 │
     │     private Long id;                                                                                                                                    │
     │                                                                                                                                                         │
     │     @Column(name = "proposal_id", nullable = false)                                                                                                     │
     │     private Long proposalId;                                                                                                                            │
     │                                                                                                                                                         │
     │     @ManyToOne(fetch = FetchType.LAZY)                                                                                                                  │
     │     @JoinColumn(name = "proposal_id", insertable = false, updatable = false)                                                                            │
     │     private Proposal proposal;                                                                                                                          │
     │                                                                                                                                                         │
     │     @Column(name = "user_google_id", length = 50, nullable = false)                                                                                     │
     │     private String userGoogleId;  // Your user indexing system                                                                                          │
     │                                                                                                                                                         │
     │     @Column(name = "voter_wallet_address", length = 42, nullable = false)                                                                               │
     │     private String voterWalletAddress;  // For blockchain verification                                                                                  │
     │                                                                                                                                                         │
     │     @Column(name = "support", nullable = false)                                                                                                         │
     │     private Boolean support;  // true = FOR, false = AGAINST                                                                                            │
     │                                                                                                                                                         │
     │     @Column(name = "voting_power", precision = 20, scale = 0, nullable = false)                                                                         │
     │     private BigInteger votingPower;  // Wei format - power at time of vote                                                                              │
     │                                                                                                                                                         │
     │     @Column(name = "voted_at", nullable = false)                                                                                                        │
     │     private LocalDateTime votedAt;                                                                                                                      │
     │                                                                                                                                                         │
     │     @Column(name = "tx_hash", length = 66)                                                                                                              │
     │     private String txHash;  // Blockchain transaction hash                                                                                              │
     │                                                                                                                                                         │
     │     @CreationTimestamp                                                                                                                                  │
     │     @Column(name = "recorded_at", nullable = false)                                                                                                     │
     │     private LocalDateTime recordedAt;  // When recorded in our DB                                                                                       │
     │ }                                                                                                                                                       │
     │                                                                                                                                                         │
     │ 🔄 Data Flow & Benefits                                                                                                                                 │
     │                                                                                                                                                         │
     │ Proposal Creation Flow                                                                                                                                  │
     │                                                                                                                                                         │
     │ 1. User creates proposal → Smart contract call                                                                                                          │
     │ 2. Proposal entity: Store exact smart contract data                                                                                                     │
     │ 3. ProposalVoteCount entity: Initialize with zero votes                                                                                                 │
     │ 4. Frontend gets clean separation of concerns                                                                                                           │
     │                                                                                                                                                         │
     │ Voting Flow                                                                                                                                             │
     │                                                                                                                                                         │
     │ 1. User votes → Smart contract call                                                                                                                     │
     │ 2. UserVote entity: Record individual vote with Google ID                                                                                               │
     │ 3. ProposalVoteCount entity: Update aggregated totals                                                                                                   │
     │ 4. No need to recalculate from individual votes each time                                                                                               │
     │                                                                                                                                                         │
     │ Query Benefits                                                                                                                                          │
     │                                                                                                                                                         │
     │ -- Get proposal with current vote counts (O(1) lookup)                                                                                                  │
     │ SELECT p.*, pvc.for_votes, pvc.against_votes, pvc.total_voters                                                                                          │
     │ FROM proposals p                                                                                                                                        │
     │ JOIN proposal_vote_counts pvc ON p.id = pvc.proposal_id                                                                                                 │
     │ WHERE p.id = ?                                                                                                                                          │
     │                                                                                                                                                         │
     │ -- Check if user voted (indexed lookup)                                                                                                                 │
     │ SELECT support FROM user_votes                                                                                                                          │
     │ WHERE proposal_id = ? AND user_google_id = ?                                                                                                            │
     │                                                                                                                                                         │
     │ -- User's voting history                                                                                                                                │
     │ SELECT uv.*, p.description                                                                                                                              │
     │ FROM user_votes uv                                                                                                                                      │
     │ JOIN proposals p ON uv.proposal_id = p.id                                                                                                               │
     │ WHERE uv.user_google_id = ?                                                                                                                             │
     │                                                                                                                                                         │
     │ 🏗 Implementation Strategy                                                                                                                              │
     │                                                                                                                                                         │
     │ Services                                                                                                                                                │
     │                                                                                                                                                         │
     │ - ProposalService: CRUD for proposals + smart contract integration                                                                                      │
     │ - VotingService: Handle voting logic + update both UserVote & ProposalVoteCount                                                                         │
     │ - ProposalSyncService: Sync with blockchain events                                                                                                      │
     │                                                                                                                                                         │
     │ Key Advantages of Your Design                                                                                                                           │
     │                                                                                                                                                         │
     │ 1. Clean Separation: Smart contract data vs. application data                                                                                           │
     │ 2. Performance: Aggregated vote counts avoid expensive calculations                                                                                     │
     │ 3. Flexibility: Easy to add features without touching core proposal data                                                                                │
     │ 4. Consistency: Google ID indexing matches your existing user system                                                                                    │
     │ 5. Scalability: Can handle large numbers of votes efficiently                                                                                           │
     │                                                                                                                                                         │
     │ Database Indexes                                                                                                                                        │
     │                                                                                                                                                         │
     │ -- Proposals                                                                                                                                            │
     │ CREATE INDEX idx_proposals_blockchain_id ON proposals(blockchain_proposal_id);                                                                          │
     │ CREATE INDEX idx_proposals_status ON proposals(executed, canceled, deadline);                                                                           │
     │ CREATE INDEX idx_proposals_proposer ON proposals(proposer_google_id);                                                                                   │
     │                                                                                                                                                         │
     │ -- User Votes                                                                                                                                           │
     │ CREATE INDEX idx_user_votes_user ON user_votes(user_google_id);                                                                                         │
     │ CREATE INDEX idx_user_votes_proposal ON user_votes(proposal_id);                                                                                        │
     │                                                                                                                                                         │
     │ -- Vote Counts (primary key is already optimal)                                                                                                         │
     │                                                                                                                                                         │
     │ This design perfectly aligns with your existing architecture while maintaining clean separation between blockchain state and application-specific data!